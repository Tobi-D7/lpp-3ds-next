name: Standart

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      commit_tag: ${{ steps.build.outputs.commit_tag }}
      commit_hash: ${{ steps.build.outputs.commit_hash }}
      author_name: ${{ steps.build.outputs.author_name }}
      committer_name: ${{ steps.build.outputs.committer_name }}
      commit_subject: ${{ steps.build.outputs.commit_subject }}
      commit_message: ${{ steps.build.outputs.commit_message }}
    
    steps:
      - uses: actions/checkout@v2

      - name: Set Up devkitARM-r45
        run: |
          
          sudo chmod +x setup.sh
          ./setup.sh
          cd /home/runner/
         
          git clone https://github.com/Tobi-D7/lpp-3ds-updated.git
          export D7=/home/runner/lpp-3ds-updated
          cd $D7/
          
          sudo mkdir /opt/devkitpro
          
          cp -r 'dka/devkitARM-r45/' '/opt/devkitpro/dka-r45'
          export DEVKITPRO=/opt/devkitpro
          export DEVKITARM=/opt/devkitpro/dka-r45
          git clone https://github.com/smealum/aemstro.git aemstro
          sudo cp -r 'aemstro/' '/opt/devkitpro/aemstro'
          export AEMSTRO=/opt/devkitpro/aemstro

          cd $DEVKITARM/arm-none-eabi/lib && make CRT=3dsx
          
          cd $D7/
          make
          mkdir -p ~/artifacts
          cp lpp-3ds-updated.3dsx ~/artifacts
          cp lpp-3ds-updated.elf ~/artifacts
          cp lpp-3ds-updated.smdh ~/artifacts

      - name: pb
        uses: actions/upload-artifact@v2
        with:
          path: ~/artifacts/*
          name: build


  publish_build:
    runs-on: ubuntu-latest
    name: Publish build to Tobi-D7/builds
    if: ${{ success() && !startsWith(github.ref, 'refs/pull') }}
    needs: build 
    env:
      COMMIT_TAG: ${{ needs.build.outputs.commit_tag }}
      COMMIT_HASH: ${{ needs.build.outputs.commit_hash }}
      AUTHOR_NAME: ${{ needs.build.outputs.author_name }}
      COMMIT_SUBJECT: ${{ needs.build.outputs.commit_subject }}
      COMMIT_MESSAGE: ${{ needs.build.outputs.commit_message }}
    outputs:
      current_date: ${{ steps.commit.outputs.current_date }}
    steps:
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install qrencode -y
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Upload to ${{ github.repository }} release
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)
          for file in ${{ github.workspace }}/build/*; do
            AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
            CONTENT_LENGTH="Content-Length: $(stat -c%s $file)"
            CONTENT_TYPE="Content-Type: application/7z-x-compressed"
            UPLOAD_URL="https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=$(basename $file)"
            curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "$file" "$UPLOAD_URL"
          done
         
      - name: Commit and push
        id: commit
        run: |
          CURRENT_DATE=$(date +"%Y%m%d-%H%M%S")
          echo ::set-output name=current_date::$CURRENT_DATE
          git config --global user.email "tobid7@outlook.de"
          git config --global user.name "Tobi-D7"
          git clone --depth 1 https://${{ secrets.TOKEN }}@github.com/TobiD7/builds.git
          mkdir -p nightlys/builds/BCSTM-Player/$COMMIT_HASH
          cd nightlys/builds/BCSTM-Player/$COMMIT_HASH
          cp ${{ github.workspace }}/build/* .
          git stage .
          git commit -m "BCSTM-Player | $COMMIT_HASH"
          git tag v$CURRENT_DATE
          git push origin master v$CURRENT_DATE
      
      - name: Release to Tobi-D7/builds
        run: |
          AUTH_HEADER="Authorization: token ${{ secrets.TOKEN }}"
          CONTENT_TYPE="Content-Type: application/json"
          API_URL="https://api.github.com/repos/Tobi-D7/builds/releases"
          RELEASE_INFO="{\"tag_name\": \"v${{ steps.commit.outputs.current_date }}\", \"name\": \"lpp-3ds-updated | $COMMIT_HASH\", \"body\": \"$AUTHOR_NAME - $COMMIT_SUBJECT\n\n$COMMIT_MESSAGE\", \"prerelease\": true}"
          RESPONSE=$(curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_TYPE" "$API_URL" -d "$RELEASE_INFO")
          ID=$(echo $RESPONSE | jq --raw-output '.id')
          for file in ${{ github.workspace }}/build/*; do
            AUTH_HEADER="Authorization: token ${{ secrets.TOKEN }}"
            CONTENT_LENGTH="Content-Length: $(stat -c%s $file)"
            CONTENT_TYPE="Content-Type: application/7z-x-compressed"
            UPLOAD_URL="https://uploads.github.com/repos/Tobi-D7/builds/releases/$ID/assets?name=$(basename $file)"
            curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "$file" "$UPLOAD_URL"
          done
      
